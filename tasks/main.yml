---
# tasks file for outline-vpn-monitoring

- name: "Installing Node Exporter"
  include_role:
    name: prometheus.prometheus.node_exporter
  vars:
    node_exporter_web_listen_address: "localhost:9100"
  tags: node-exporter

- name: "Installing Prometheus"
  include_role:
    name: prometheus.prometheus.prometheus
  vars:
    prometheus_web_listen_address: "localhost:9090"
    prometheus_global:
      scrape_interval: "15s"
      scrape_timeout: "10s"
      evaluation_interval: "15s"

    prometheus_scrape_configs:
      - job_name: prometheus
        metrics_path: /metrics
        static_configs:
          - targets:
            - "localhost:9090"
      - job_name: node-exporter
        static_configs:
          - targets:
            - "localhost:9100"
      - job_name: outline-server-main
        static_configs:
          - targets:
            - "localhost:9091"
      - job_name: outline-server-ss
        static_configs:
          - targets:
            - "localhost:9092"
      - job_name: node
        file_sd_configs:
          - files:
            - "{{ prometheus_config_dir }}/file_sd/node.yml"
  tags: prometheus

- name: "Installing Grafana"
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana-enterprise
    restart: yes
    network_mode: host
    exposed_ports:
      - "3000"
    volumes:
      - "grafana_data:/var/lib/grafana_data"
  tags: grafana

- name: "Installing Grafana plugins"
  community.docker.docker_container_exec:
    container: grafana
    command: "grafana cli plugins install grafana-piechart-panel"
    chdir: /home/grafana
  register: installation_plugins_result
  notify:
    - "Restart Grafana container"      
  tags: [ grafana, grafana-plugins ]

- name: "Print installation_plugins_result"
  ansible.builtin.debug:
    var: installation_plugins_result.stdout
  tags: [ grafana, grafana-plugins ]

- name: "Copying certs and service configs on hosts"
  copy:
    src: "{{ item }}"
    dest: "~/"
  loop:
    - "certs"
    - "services"
  tags: [ grafana, grafana-https ]

- name: "Copying certs to Grafana"
  community.docker.docker_container_copy_into:
    container: grafana
    path: "~/certs/grafana/{{ item }}"
    container_path: "/etc/grafana/{{ item }}"
  loop:
    - "grafana.crt"
    - "grafana.key"
  notify:
    - "Restart Grafana container"
  tags: [ grafana, grafana-https ]

- name: "Copying custom grafana.ini to Grafana"
  community.docker.docker_container_copy_into:
    container: grafana
    path: "~/services/grafana/grafana.ini"
    container_path: "/etc/grafana/grafana.ini"
  notify:
    - "Restart Grafana container"
  tags: [ grafana, grafana-config ]